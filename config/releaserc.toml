# ==================================================================================================
# Python Semantic Release Configurations for the `tessara` Package
#
# File: `config/tools/releaserc.toml`
#
# Usage
# -----
# From the terminal, pass this configuration file to the versioning tool:
#
# ```sh
# semantic-release --config config/tools/releaserc.toml -v version
# ```
#
# Notes
# -----
# This configuration file is used in the GitHub action `gh-release.yml` to automate the release
# process.
#
# See Also
# --------
# [Python Semantic Release Documentation](https://python-semantic-release.readthedocs.io/en/latest/)
# ==================================================================================================

# --- General Settings -----------------------------------------------------------------------------

[semantic_release]

branch = "main"
commit_message = "release: {version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
tag_format = "v{version}"

# Version sources
version_toml = ["pyproject.toml:project.version"]
version_variables = ["CITATION.cff:version"]

# Release Assets
assets = [
    "dist/*.whl",           # Python wheel files
    "dist/*.tar.gz",        # Source distributions
    "docs/*.pdf",           # Documentation PDFs
]

# --- Branch Groups --------------------------------------------------------------------------------

[semantic_release.branches.main]

match = "main"
prerelease_token = "rc"
prerelease = false

# --- Commit Message Parsing -----------------------------------------------------------------------

[semantic_release.commit_parser_options]

major_versions = ["BREAKING CHANGE"]
minor_versions = ["feat"]
patch_versions = ["fix", "perf", "refactor"]


# --- Changelog Generation -------------------------------------------------------------------------

[semantic_release.changelog]

exclude_commit_patterns = [
    '''chore(?:\([^)]*?\))?: .+''',
    '''ci(?:\([^)]*?\))?: .+''',
    '''refactor(?:\([^)]*?\))?: .+''',
    '''style(?:\([^)]*?\))?: .+''',
    '''test(?:\([^)]*?\))?: .+''',
    '''build\((?!deps\): .+)''',
    '''Initial [Cc]ommit.*''',
]

[semantic_release.changelog.default_templates]

changelog_file = "docs/CHANGELOG.md"
output_format = "md"


# --- Remote Publishing ----------------------------------------------------------------------------

[semantic_release.remote.token]

type = "github"
env = "GH_TOKEN"

[semantic_release.publish]

dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
